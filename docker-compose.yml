version: '3.7'

services:
  web:
    container_name: PidarWeb
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "9090:80" # API exposed to host
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - ConnectionStrings__DefaultConnection=${CONNECTIONSTRINGS__DEFAULTCONNECTION}
    volumes:
      - ./app:/var/www/html/ # Optional: map app source if needed for live reload
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pidar-net

  db:
    container_name: PidarDB
    image: postgres:10.5 # Matches your server version
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pidar_postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pidar-net

  pgadmin:
    container_name: PidarPgAdmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      SCRIPT_NAME: /pgadmin
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pidar_pgadmin_data:/var/lib/pgadmin
    networks:
      - pidar-net

volumes:
  pidar_postgres_data:
  pidar_pgadmin_data:

networks:
  pidar-net:
    driver: bridge
